//https://practice.geeksforgeeks.org/problems/maximum-meetings-in-one-room/1
class Solution {
    public static ArrayList<Integer> maxMeetings(int N, int[] S, int[] F) {
        // code here
        Pair[]arr=new Pair[N];
		for(int i=0;i<N;i++){
			arr[i]=new Pair(S[i],F[i],i+1);
		}
		Arrays.sort(arr,(a,b)->{
			return a.startTime-b.startTime;
		});
		ArrayList<Integer>ans=new ArrayList<>();
		int cnt=0; int last=-1;
		for(int i=0;i<N;i++){
			int first=arr[i].startTime;
			if(first>last){
				// cnt++;
				ans.add(arr[i].index);
				last=arr[i].endTime;
			}else{
				if(last>arr[i].endTime){
				    last=arr[i].endTime;
				    ans.set(ans.size()-1,arr[i].index);
				}
			}
		}
		Collections.sort(ans);
		return ans;
    }
}
class Pair{
	int startTime;
	int endTime; int index;
	Pair(int x ,int y,int i){
		this.startTime=x;
		this.endTime=y; this.index=i;
	}
}
